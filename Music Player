<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Player</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
<style>
    body {
    font-family: Arial, sans-serif;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
    background:url("download - 2024-09-04T144412.619.jpg") center/cover no-repeat;
}

.player {
    background: #fff;
    border: 1px solid #ddd;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    padding: 20px;
    width: 320px;
    text-align: center;
}

.track-list ul {
    list-style: none;
    padding: 0;
    margin: 0;
}

.track-list li {
    padding: 10px;
    cursor: pointer;
}

.track-list li:hover {
    background: #f0f0f0;
}

.controls button {
    background: #007bff;
    border: none;
    color: #fff;
    padding: 10px 15px;
    margin: 5px;
    border-radius: 5px;
    cursor: pointer;
}

.controls button:hover {
    background: #0056b3;
}

.progress {
    margin-top: 20px;
}

#progress {
    width: 100%;
}

.volume {
    margin-top: 20px;
}

#volume {
    width: 100%;
}
</style>

    <div class="player">
        <div class="track-list">
            <ul id="playlist">
                <li data-src="c:\fav songs\Nannare-Nannare.mp3">Nannare Nannare </li>
                <li data-src="c:\fav songs\high school love on .mp3">High School </li>
                <li data-src="c:\fav songs\Kadhal-Oru-Aagayam-MassTamilan.com.mp3">Kadhal Oru </li>
                <li data-src="c:\fav songs\Nee-Varumbodhu.mp3">Nee Varumbodhu </li>
                <li data-src="c:\fav songs\yeen ennai .mp3">Yeen Ennai </li>
            </ul>
        </div>
        <div class="controls">
            <button id="prev">Prev</button>
            <button id="playPause">Play</button>
            <button id="next">Next</button>
        </div>
        <div class="progress">
            <input type="range" id="progress" value="0" max="100">
            <span id="currentTime">0:00</span> / <span id="duration">0:00</span>
        </div>
        <div class="volume">
            <label for="volume">Volume</label>
            <input type="range" id="volume" value="100" max="100">
        </div>
    </div>
    <audio id="audio" preload="metadata">
        <source src="" type="audio/mpeg">
        Your browser does not support the audio element.
    </audio>
    <script src="script.js"></script>
    <script>
    document.addEventListener('DOMContentLoaded', () => {
        const audio = document.getElementById('audio');
        const playPauseButton = document.getElementById('playPause');
        const progress = document.getElementById('progress');
        const currentTimeDisplay = document.getElementById('currentTime');
        const durationDisplay = document.getElementById('duration');
        const volumeControl = document.getElementById('volume');
        const prevButton = document.getElementById('prev');
        const nextButton = document.getElementById('next');
        const playlistItems = document.querySelectorAll('#playlist li');
        let isPlaying = false;
        let currentTrackIndex = 0;
    
        function loadTrack(index) {
            const track = playlistItems[index].getAttribute('data-src');
            audio.src = track;
            audio.play();
            isPlaying = true;
            updatePlayPauseButton();
        }
    
        function updatePlayPauseButton() {
            if (isPlaying) {
                playPauseButton.textContent = 'Pause';
            } else {
                playPauseButton.textContent = 'Play';
            }
        }
    
        function updateProgress() {
            const progressPercent = (audio.currentTime / audio.duration) * 100;
            progress.value = progressPercent;
            currentTimeDisplay.textContent = formatTime(audio.currentTime);
            durationDisplay.textContent = formatTime(audio.duration);
        }
    
        function formatTime(seconds) {
            const minutes = Math.floor(seconds / 60);
            const secs = Math.floor(seconds % 60);
            return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;
        }
    
        function setVolume() {
            audio.volume = volumeControl.value / 100;
        }
    
        playPauseButton.addEventListener('click', () => {
            if (isPlaying) {
                audio.pause();
            } else {
                audio.play();
            }
            isPlaying = !isPlaying;
            updatePlayPauseButton();
        });
    
        audio.addEventListener('timeupdate', updateProgress);
    
        progress.addEventListener('input', () => {
            const newTime = (progress.value / 100) * audio.duration;
            audio.currentTime = newTime;
        });
    
        volumeControl.addEventListener('input', setVolume);
    
        prevButton.addEventListener('click', () => {
            if (currentTrackIndex > 0) {
                currentTrackIndex--;
                loadTrack(currentTrackIndex);
            }
        });
    
        nextButton.addEventListener('click', () => {
            if (currentTrackIndex < playlistItems.length - 1) {
                currentTrackIndex++;
                loadTrack(currentTrackIndex);
            }
        });
    
        playlistItems.forEach((item, index) => {
            item.addEventListener('click', () => {
                currentTrackIndex = index;
                loadTrack(currentTrackIndex);
            });
        });
    
        audio.addEventListener('ended', () => {
            if (currentTrackIndex < playlistItems.length - 1) {
                currentTrackIndex++;
                loadTrack(currentTrackIndex);
            } else {
                isPlaying = false;
                updatePlayPauseButton();
            }
        });
    
        // Load the first track on page load
        loadTrack(currentTrackIndex);
    });
</script>    
</body>
</html>
